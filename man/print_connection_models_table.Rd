% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelling.R
\name{print_connection_models_table}
\alias{print_connection_models_table}
\title{Get LaTeX code for the connection bivariate GMM features (mu and sigma)}
\usage{
print_connection_models_table(GMM, label, caption, full_width, path = NULL)
}
\arguments{
\item{GMM}{Gaussian Mixture Models obtained from function \code{get_connection_models}}

\item{label}{character, e.g. "tab:gmm"}

\item{caption}{character, table caption}

\item{full_width}{logical, if true the "*" will be added next to the "table" tag}

\item{path}{character, file path to write the latex table to. Is must have ".tex" extension.
If it is NULL, then the character string is returned instead of writing a file.}
}
\value{
character, LaTeX code
}
\description{
Get LaTeX code for the connection bivariate GMM features (mu and sigma)
}
\examples{
library(dplyr)

# Select working day sessions (`Timecycle == 1`) that
# disconnect the same day (`Disconnection == 1`)
sessions_day <- california_ev_sessions \%>\%
  divide_by_timecycle(
    months_cycles = list(1:12), # Not differentiation between months
    wdays_cycles = list(1:5, 6:7) # Differentiation between workdays/weekends
  ) \%>\%
  divide_by_disconnection(
    division_hour = 10, start = 3
  ) \%>\%
  filter(
    Disconnection == 1, Timecycle == 1
  )
plot_points(sessions_day, start = 3)

# Identify two clusters
sessions_clusters <- cluster_sessions(
  sessions_day, k=2, seed = 1234, log = TRUE
)

# Plot the clusters found
plot_bivarGMM(
  sessions = sessions_clusters$sessions,
  models = sessions_clusters$models,
  log = TRUE, start = 3
)

# Define the clusters with user profile interpretations
clusters_definitions <- define_clusters(
  models = sessions_clusters$models,
  interpretations = c(
    "Connections during working hours",
    "Connections during all day (high variability)"
  ),
  profile_names = c("Workers", "Visitors"),
  log = TRUE
)

# Create a table with the connection GMM parameters
connection_models <- get_connection_models(
  subsets_clustering = list(sessions_clusters),
  clusters_definition = list(clusters_definitions)
)

# Print connection GMM tables
print_connection_models_table(
  GMM = connection_models,
  label = "tab:con-gmm",
  caption = "Connection GMM",
  full_width = TRUE
)


}
