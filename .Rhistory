get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
sunday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
plot_energy_models_density(sunday_energy_models, log = T)
sunday_energy_models_plots
# Build the models
set.seed(11)
sunday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
sunday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
plot_energy_models_density(sunday_energy_models, log = T)
sunday_energy_models_plots
# Build the models
set.seed(11)
sunday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
sunday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
plot_energy_models_density(sunday_energy_models, log = T)
sunday_energy_models_plots
library(evprof)
knitr::opts_chunk$set(echo = TRUE)
library(evprof)
library(dplyr)
library(lubridate)
library(ggplot2)
library(dygraphs)
library(purrr)
library(tidyr)
library(dutils)
load('california_data/california_sessions_divided.RData')
load('california_data/california_sessions_clean.RData')
load('california_data/california_GMM.RData')
load('california_data/california_sessions_profiles.RData')
load('california_data/california_sessions_models.RData')
load('california_data/california_comparison_demand.RData')
options(
evprof.tzone = "America/Los_Angeles",
evprof.start.hour = 3
)
# setwd('vignettes') # Before Knit
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(evprof)
library(dplyr)
library(lubridate)
library(ggplot2)
library(dygraphs)
library(purrr)
library(tidyr)
library(dutils)
# source('pr_data/pr_sessions.R')
load('pr_data/connections.RData')
# load('pr_data/pr_sessions_divided.RData')
# load('pr_data/pr_sessions_clean.RData')
# load('pr_data/pr_sessions_clusters.RData')
load('pr_data/pr_sessions_profiles.RData')
load('pr_data/pr_sessions_models.RData')
options(
evprof.tzone = "Europe/Amsterdam",
evprof.start.hour = 4
)
# Build the models
set.seed(1)
workday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Workday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
workday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Workday') %>%
plot_energy_models_density(workday_energy_models, log = T)
workday_energy_models_plots
# Save the result
ggsave(
filename = 'pr_data/figures/MODELS/energy_workday_GMM.pdf',
plot = workday_energy_models_plots,
paper="a4r", width = 40, height = 20
)
# Build the models
set.seed(3)
friday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Friday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
friday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Friday') %>%
plot_energy_models_density(friday_energy_models, log = T)
friday_energy_models_plots
# Save the result
ggsave(
filename = 'pr_data/figures/MODELS/energy_friday_GMM.pdf',
plot = friday_energy_models_plots,
paper="a4r", width = 40, height = 20
)
# Build the models
set.seed(3)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(1)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(2)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(4)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(5)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(5)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=6, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(10)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(11)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(15)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(16)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Build the models
set.seed(18)
saturday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
saturday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Saturday') %>%
plot_energy_models_density(saturday_energy_models, log = T)
saturday_energy_models_plots
# Save the result
ggsave(
filename = 'pr_data/figures/MODELS/energy_saturday_GMM.pdf',
plot = saturday_energy_models_plots,
paper="a4r", width = 40, height = 20
)
# Build the models
set.seed(11)
sunday_energy_models <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
get_energy_models(
c("Visit"=4, "Worktime"=4, "Dinner"=4, "Home"=4),
log = TRUE
)
# Plot the univariate GMM
sunday_energy_models_plots <- sessions_profiles %>%
filter(Timecycle == 'Sunday') %>%
plot_energy_models_density(sunday_energy_models, log = T)
sunday_energy_models_plots
# Save the result
ggsave(
filename = 'pr_data/figures/MODELS/energy_sunday_GMM.pdf',
plot = sunday_energy_models_plots,
paper="a4r", width = 40, height = 20
)
save(
workday_connection_models, workday_energy_models, friday_connection_models, friday_energy_models,
saturday_connection_models, saturday_energy_models, sunday_connection_models, sunday_energy_models,
file = 'pr_data/pr_sessions_models.RData'
)
ev_model <- get_ev_model(
names = c('Workday', 'Friday', 'Saturday', 'Sunday'),
months_lst = list(1:12),
wdays_lst = list(1:4, 5, 6, 7),
connection_GMM = list(
workday_connection_models, friday_connection_models,
saturday_connection_models, sunday_connection_models
),
energy_GMM = list(
workday_energy_models, friday_energy_models,
saturday_energy_models, sunday_energy_models
),
connection_log = T,
energy_log = T
)
ev_model
save_ev_model(ev_model, file = "pr_data/pr_evmodel.RDS")
rmarkdown::render('pr.Rmd', 'pr.html')
rmarkdown::render('pr.Rmd', output_file = 'pr.html')
sessions_profiles %>% saveRDS('pr_data/pr_sessions_profiles.RDS')
# setwd('vignettes') before running chunks
# To Knit run rmarkdown::render('pr.Rmd', output_file = 'pr.html')
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(evprof)
library(dplyr)
library(lubridate)
library(ggplot2)
library(dygraphs)
library(purrr)
library(tidyr)
library(dutils)
# source('pr_data/pr_sessions.R')
load('pr_data/connections.RData')
# load('pr_data/pr_sessions_divided.RData')
# load('pr_data/pr_sessions_clean.RData')
# load('pr_data/pr_sessions_clusters.RData')
load('pr_data/pr_sessions_profiles.RData')
load('pr_data/pr_sessions_models.RData')
options(
evprof.tzone = "Europe/Amsterdam",
evprof.start.hour = 4
)
sessions_profiles %>%
group_by(Timecycle, Profile) %>%
summarise(n = n()) %>%
group_by(Timecycle) %>%
mutate(pct = n/sum(n))
sessions_profiles %>%
group_by(Timecycle, Profile) %>%
summarise(n = n()) %>%
group_by(Timecycle) %>%
mutate(pct = round(n/sum(n)*100))
sessions_profiles %>%
group_by(time_cycle = Timecycle, profile = Profile) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
mutate(ratio = round(n/sum(n)*100)) %>%
select(-n)
ev_config <- list()
ev_config[["ev_profiles"]] <- sessions_profiles %>%
group_by(time_cycle = Timecycle, profile = Profile) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
mutate(ratio = round(n/sum(n)*100)) %>%
select(-n)
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = median(n))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(median(n)))
sessions_profiles %>%
# filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(median(n)))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(median(n)))
sessions_profiles %>%
group_by(time_cycle = Timecycle, profile = Profile) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
mutate(ratio = round(n/sum(n)*100)) %>%
select(-n)
essions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(median(n)))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(median(n)))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n)))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n)))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(median(n)))
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n)))
sessions_profiles %>% group_by(Profile) %>% summarise(n = n()) %>% ggplot(aes(Profile, n)) + geom_col
sessions_profiles %>% group_by(Profile) %>% summarise(n = n()) %>% ggplot(aes(Profile, n)) + geom_col()
sessions_profiles %>% group_by(Timcycle) %>% summarise(n = n()) %>% ggplot(aes(Timcycle, n)) + geom_col()
sessions_profiles %>% group_by(Timecycle) %>% summarise(n = n()) %>% ggplot(aes(Timecycle, n)) + geom_col()
sessions_profiles %>% filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%group_by(Timecycle) %>% summarise(n = n()) %>% ggplot(aes(Timecycle, n)) + geom_col()
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
ggplot(aes(date, n, color = time_cycle))+
geom_col()
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
ggplot(aes(date, n, fill = time_cycle))+
geom_col()
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n)))
ev_config[["ev_sessions"]] <- sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n)))
ev_config[["ev_sessions"]] <- sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n))) %>%
ungroup()
sessions_profiles %>%
filter(year(ConnectionStartDateTime) == 2021, month(ConnectionStartDateTime) > 8) %>%
group_by(time_cycle = Timecycle, date = date(ConnectionStartDateTime)) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
summarise(sessions_day = round(mean(n)))
sessions_profiles %>%
group_by(time_cycle = Timecycle, profile = Profile) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
mutate(ratio = round(n/sum(n)*100)) %>%
select(-n)
ev_config[["ev_profiles"]] <- sessions_profiles %>%
group_by(time_cycle = Timecycle, profile = Profile) %>%
summarise(n = n()) %>%
group_by(time_cycle) %>%
mutate(ratio = round(n/sum(n)*100)) %>%
select(-n)
writexl::write_xlsx(ev_config, 'pr_data/ev_config.xlsx')
setwd('vignettes')
# setwd('vignettes') before running chunks
# To Knit run rmarkdown::render('pr.Rmd', output_file = 'pr.html')
knitr::opts_chunk$set(echo = TRUE, fig.width = 10)
library(evprof)
library(dplyr)
library(lubridate)
library(ggplot2)
library(dygraphs)
library(purrr)
library(tidyr)
library(dutils)
# source('pr_data/pr_sessions.R')
load('pr_data/connections.RData')
# load('pr_data/pr_sessions_divided.RData')
# load('pr_data/pr_sessions_clean.RData')
# load('pr_data/pr_sessions_clusters.RData')
load('pr_data/pr_sessions_profiles.RData')
load('pr_data/pr_sessions_models.RData')
options(
evprof.tzone = "Europe/Amsterdam",
evprof.start.hour = 4
)
sessions %>% mutate(wday = wday(ConnectionStartDateTime, wweek_start = 1)) %>% plot_points() + facet_wrap(~ wday)
sessions %>% mutate(weekday = wday(ConnectionStartDateTime, wweek_start = 1)) %>% plot_points() + facet_wrap(~ weekday)
sessions %>% mutate(weekday = wday(ConnectionStartDateTime, wweek_start = 1))
sessions %>% mutate(weekday = wday(ConnectionStartDateTime, week_start = 1)) %>% plot_points() + facet_wrap(~ weekday)
sessions_profiles %>% mutate(weekday = wday(ConnectionStartDateTime, week_start = 1)) %>% plot_points() + facet_wrap(~ weekday)
sessions_divisions %>% mutate(weekday = wday(ConnectionStartDateTime, week_start = 1)) %>% plot_points() + facet_wrap(~ weekday)
sessions_divided %>% mutate(weekday = wday(ConnectionStartDateTime, week_start = 1)) %>% plot_points() + facet_wrap(~ weekday)
sessions_profiles %>% mutate(weekday = wday(ConnectionStartDateTime, week_start = 1)) %>% plot_points() + facet_wrap(~ weekday)
sessions_divided %>%
filter(Disconnection == "Home", Timecycle == "Workday") %>% plot_points()
exp(2)
exp(3)
