mod <- get_mclust_object(sessions_cluster, k = k)
mod_params <- get_mclust_params(mod)
ellipses_plots[[i]] <- plot_bivarGMM(sessions_cluster, mod_params) +
ggtitle(paste0("Seed: ", seeds[i], ", BIC: ", round(mod$bic))) +
scale_color_discrete(labels = paste0(
seq(1, mod$G), " (", round(mod$parameters$pro*100), "%)"
))
IC_values$seed[i] <- seeds[i]
IC_values$BIC[i] <- round(mod$bic)
}
opt_BIC_seed <- IC_values$seed[which(IC_values$BIC == max(IC_values$BIC))]
message(paste("Optimal seed:", opt_BIC_seed[1], "with BIC =", max(IC_values$BIC)))
ellipses_plots_gr <<- ellipses_plots
ggsave(filename, plot = gridExtra::marrangeGrob(ellipses_plots), scale = plot_scale)
}
save_cluster_iterations(sessions_weekdays_city, k=6, it=6, filename = "weekdays_city_k-6.pdf", plot_scale = 2)
save_cluster_iterations <- function(sessions, k, it=12, seeds = round(runif(it, min=1, max=1000)),
filename = paste0("iteration_", k, "_clusters.pdf"), plot_scale = 2,
mclust_tol = 1e-8, mclust_itmax = 1e4) {
ellipses_plots <- list()
IC_values <- tibble(
seed = seeds,
BIC = 0
)
for (i in 1:length(seeds)) {
sessions_cluster <- sessions
set.seed(seeds[i])
mod <- get_mclust_object(sessions_cluster, k = k)
mod_params <- get_mclust_params(mod)
ellipses_plots[[i]] <- plot_bivarGMM(sessions_cluster, mod_params) +
ggtitle(paste0("Seed: ", seeds[i], ", BIC: ", round(mod$bic))) +
scale_color_discrete(labels = paste0(
seq(1, mod$G), " (", round(mod$parameters$pro*100), "%)"
))
IC_values$seed[i] <- seeds[i]
IC_values$BIC[i] <- round(mod$bic)
}
opt_BIC_seed <- IC_values$seed[which(IC_values$BIC == max(IC_values$BIC))]
message(paste("Optimal seed:", opt_BIC_seed[1], "with BIC =", max(IC_values$BIC)))
ellipses_plots_gr <<- ellipses_plots
ggsave(filename, plot = gridExtra::marrangeGrob(ellipses_plots, nrow = round(it/3), ncol = 3), scale = plot_scale)
}
save_cluster_iterations(sessions_weekdays_city, k=6, it=6, filename = "weekdays_city_k-6.pdf", plot_scale = 2)
# save_cluster_iterations(sessions_weekdays_home, k=4, it=6, filename = "weekdays_home_k-4.pdf")
# save_cluster_iterations(sessions_weekends_city, k=6, it=6, filename = "weekends_city_k-6.pdf")
# save_cluster_iterations(sessions_weekends_home, k=4, it=6, filename = "weekends_home_k-4.pdf")
weekdays_city_bivarGMM <- cluster_sessions(sessions_weekdays_city, k = 6, seed = 102)
#'
#' @param sessions sessions data set in standard format
#' @param k number of clusters
#' @param seed random seed
#' @param tol tolerance parameter for clustering
#' @param itmax maximum number of iterations
#'
#' @return list with two attributes: sessions and models
#' @export
#'
cluster_sessions <- function(sessions, k, seed, mclust_tol = 1e-8, mclust_itmax = 1e4) {
set.seed(seed)
mclust_obj <- get_mclust_object(sessions, k, mclust_tol = mclust_tol, mclust_itmax = mclust_itmax)
sessions["Cluster"] = mclust_obj$classification
list(
sessions = sessions,
models = get_mclust_params(mclust_obj)
)
}
weekdays_city_bivarGMM <- cluster_sessions(sessions_weekdays_city, k = 6, seed = 102)
model_weekdays_bivarGMM <- cluster_sessions(sessions_weekdays_home, k = 4, seed = 154)
model_weekends_bivarGMM <- cluster_sessions(sessions_weekends_city, k = 6, seed = 94)
model_weekends_bivarGMM <- cluster_sessions(sessions_weekends_home, k = 4, seed = 119)
purrr::map2(
list(sessions_weekdays_city, sessions_weekdays_home, sessions_weekends_city, sessions_weekends_home),
list(model_weekdays_city, model_weekdays_home, model_weekends_city, model_weekends_home),
~ plot_bivarGMM(.x, .y)
)
View(sessions_weekdays_city)
weekdays_city_bivarGMM <- cluster_sessions(sessions_weekdays_city, k = 6, seed = 102)
model_weekdays_bivarGMM <- cluster_sessions(sessions_weekdays_home, k = 4, seed = 154)
model_weekends_bivarGMM <- cluster_sessions(sessions_weekends_city, k = 6, seed = 94)
model_weekends_bivarGMM <- cluster_sessions(sessions_weekends_home, k = 4, seed = 119)
purrr::map2(
list(weekdays_city_bivarGMM, model_weekdays_bivarGMM, model_weekends_bivarGMM, model_weekends_bivarGMM),
list(model_weekdays_city, model_weekdays_home, model_weekends_city, model_weekends_home),
~ plot_bivarGMM(.x, .y)
)
(a, b) <- list(a = c(1, 2, 3), b = c(4, 5, 6))
list(a, b) <- list(a = c(1, 2, 3), b = c(4, 5, 6))
weekdays_city_bivarGMM <- cluster_sessions(sessions_weekdays_city, k = 6, seed = 102)
weekdays_city_bivarGMM <- cluster_sessions(sessions_weekdays_city, k = 6, seed = 122)
weekdays_home_bivarGMM <- cluster_sessions(sessions_weekdays_home, k = 4, seed = 154)
weekends_city_bivarGMM <- cluster_sessions(sessions_weekends_city, k = 6, seed = 94)
weekends_home_bivarGMM <- cluster_sessions(sessions_weekends_home, k = 4, seed = 119)
purrr::map2(
list(sessions_weekdays_city, sessions_weekdays_home, sessions_weekends_city, sessions_weekends_home),
list(weekdays_city_bivarGMM$models, weekdays_home_bivarGMM$models, weekends_city_bivarGMM$models, weekends_home_bivarGMM$models),
~ plot_bivarGMM(.x, .y)
)
ggsave("test.pdf", plot = gridExtra::marrangeGrob(ellipses_plots_gr, nrow = 4, ncol = 3), scale = 2)
ggsave("test.pdf", plot = gridExtra::marrangeGrob(ellipses_plots_gr, nrow = 4, ncol = 3), scale = 0.5)
ggsave("test.pdf", plot = gridExtra::marrangeGrob(c(ellipses_plots_gr, ellipses_plots_gr), nrow = 4, ncol = 3), scale = 0.5)
ggsave("test.pdf", plot = gridExtra::marrangeGrob(c(ellipses_plots_gr, ellipses_plots_gr), nrow = 4, ncol = 3), scale = 2)
ggsave("test.pdf", plot = gridExtra::marrangeGrob(c(ellipses_plots_gr, ellipses_plots_gr), nrow = 4, ncol = 3), scale = 5)
?gtable
gridExtra::marrangeGrob(c(ellipses_plots_gr, ellipses_plots_gr), nrow = 4, ncol = 3)
ellipses_plots_gr[[1]]
gridExtra::marrangeGrob(c(ellipses_plots_gr, ellipses_plots_gr), nrow = 4, ncol = 3)
gridExtra::marrangeGrob(ellipses_plots_gr, nrow = 4, ncol = 3)
cowplot::plot_grid(plotlist = c(ellipses_plots_gr, ellipses_plots_gr), scale = 5)
cowplot::plot_grid(plotlist = c(ellipses_plots_gr, ellipses_plots_gr), scale = 0.5)
cluster_sessions(sessions_weekdays_city, k = 6, seed = 122)
weekdays_city_bivarGMM <- cluster_sessions(sessions_weekdays_city, k = 6, seed = 122)
weekdays_home_bivarGMM <- cluster_sessions(sessions_weekdays_home, k = 4, seed = 154)
weekends_city_bivarGMM <- cluster_sessions(sessions_weekends_city, k = 6, seed = 94)
weekends_home_bivarGMM <- cluster_sessions(sessions_weekends_home, k = 4, seed = 119)
purrr::map2(
list(sessions_weekdays_city, sessions_weekdays_home, sessions_weekends_city, sessions_weekends_home),
list(weekdays_city_bivarGMM$models, weekdays_home_bivarGMM$models, weekends_city_bivarGMM$models, weekends_home_bivarGMM$models),
~ plot_bivarGMM(.x, .y)
)
weekdays_city_clusters_profiles <- tibble(
cluster = weekdays_city_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[2])
)
library(purrr)
weekdays_city_clusters_profiles <- tibble(
cluster = weekdays_city_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekdays_city_bivarGMM$cluster,
interpretation = c(
"They work during the afternoon",
"They work during the morning",
"Full-day workers",
"They go out to have dinner",
"They go shopping, visiting someone, or deliver something",
"Super short visits or shopping"
),
profile = c("Worktime", "Worktime", "Worktime", "Dinner", "Shortstay", "Shortstay")
)
weekdays_city_clusters_profiles %>%
left_join(interp, by = "cluster") %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekdays_city_clusters_profiles
weekdays_city_clusters_profiles <- tibble(
cluster = weekdays_city_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekdays_city_bivarGMM$models$cluster,
interpretation = c(
"They work during the afternoon",
"They work during the morning",
"Full-day workers",
"They go out to have dinner",
"They go shopping, visiting someone, or deliver something",
"Super short visits or shopping"
),
profile = c("Worktime", "Worktime", "Worktime", "Dinner", "Shortstay", "Shortstay")
)
weekdays_city_clusters_profiles %>%
left_join(interp, by = "cluster") %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekdays_home_clusters_profiles <- tibble(
cluster = weekdays_home_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekdays_home_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekdays_home_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekdays_home_bivarGMM$models$cluster,
interpretation = c(
"They go home at night, leaving always next morning",
"They go home always after work, leaving always next morning",
"They go home during the afternoon or night, leaving always next morning",
"They go home during the afternoon or night, not necessarily leaving next morning"
),
profile = c("Pillow", "Home", "Home", "Home")
)
weekdays_home_clusters_profiles %>%
left_join(interp, by = "cluster") %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekends_city_clusters_profiles <- tibble(
cluster = weekends_city_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekends_city_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekends_city_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekends_city_bivarGMM$models$cluster,
interpretation = c(
"They go out during afternoon and probably dinner",
"They visit the city during the morning",
"They visit the city during the afternoon",
"They visit the city the whole day",
"Super short visits or shopping",
"They go shopping, visiting someone, or deliver something"
),
profile = c("Dinner", "Visit", "Visit", "Visit", "Shortstay", "Shortstay")
)
weekends_city_clusters_profiles %>%
left_join(interp, by = "cluster") %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekends_home_clusters_profiles <- tibble(
cluster = weekends_home_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekends_home_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekends_home_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekends_home_bivarGMM$models$cluster,
interpretation = c(
"They go home at night, leaving always next morning",
"They go home always after work, leaving always next morning",
"They go home during the afternoon or night, not necessarily leaving next morning",
"They go home during the afternoon or night, leaving always next morning"
),
profile = c("Pillow", "Home", "Home", "Home")
)
weekends_home_clusters_profiles %>%
left_join(interp, by = "cluster") %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
bind_rows(
weekdays_city_bivarGMM$sessions, weekdays_home_bivarGMM$sessions,
weekends_city_bivarGMM$sessions, weekends_home_bivarGMM$sessions
)
sessions_profiles <- purrr::map2_dfr(
list(weekdays_city_bivarGMM$sessions, weekdays_home_bivarGMM$sessions, weekends_city_bivarGMM$sessions, weekends_home_bivarGMM$sessions),
list(weekdays_city_clusters_profiles, weekdays_home_clusters_profiles, weekends_city_clusters_profiles, weekends_home_clusters_profiles),
~ left_join(
.x,
.y %>% select(cluster, profile) %>% rename(Cluster = cluster, Profile = profile),
by = "Cluster"
)
) %>%
select(c(evprof::sessions_feature_names, "Profile"))
weekdays_city_clusters_profiles <- tibble(
cluster = weekdays_city_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekdays_city_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekdays_city_bivarGMM$models$cluster,
interpretation = c(
"They work during the afternoon",
"They work during the morning",
"Full-day workers",
"They go out to have dinner",
"They go shopping, visiting someone, or deliver something",
"Super short visits or shopping"
),
profile = c("Worktime", "Worktime", "Worktime", "Dinner", "Shortstay", "Shortstay")
)
weekdays_city_clusters_profiles <- weekdays_city_clusters_profiles %>%
left_join(interp, by = "cluster")
weekdays_city_clusters_profiles %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekdays_home_clusters_profiles <- tibble(
cluster = weekdays_home_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekdays_home_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekdays_home_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekdays_home_bivarGMM$models$cluster,
interpretation = c(
"They go home at night, leaving always next morning",
"They go home always after work, leaving always next morning",
"They go home during the afternoon or night, leaving always next morning",
"They go home during the afternoon or night, not necessarily leaving next morning"
),
profile = c("Pillow", "Home", "Home", "Home")
)
weekdays_home_clusters_profiles <- weekdays_home_clusters_profiles %>%
left_join(interp, by = "cluster")
weekdays_home_clusters_profiles %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekends_city_clusters_profiles <- tibble(
cluster = weekends_city_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekends_city_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekends_city_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekends_city_bivarGMM$models$cluster,
interpretation = c(
"They go out during afternoon and probably dinner",
"They visit the city during the morning",
"They visit the city during the afternoon",
"They visit the city the whole day",
"Super short visits or shopping",
"They go shopping, visiting someone, or deliver something"
),
profile = c("Dinner", "Visit", "Visit", "Visit", "Shortstay", "Shortstay")
)
weekends_city_clusters_profiles <- weekends_city_clusters_profiles %>%
left_join(interp, by = "cluster")
weekends_city_clusters_profiles %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
weekends_home_clusters_profiles <- tibble(
cluster = weekends_home_bivarGMM$models$cluster,
mean_start_time = map_dbl(weekends_home_bivarGMM$models$mu, ~.x[1]) %>% convert_time_num_to_chr(),
mean_conn_time = map_dbl(weekends_home_bivarGMM$models$mu, ~.x[2])
)
interp <- tibble(
cluster = weekends_home_bivarGMM$models$cluster,
interpretation = c(
"They go home at night, leaving always next morning",
"They go home always after work, leaving always next morning",
"They go home during the afternoon or night, not necessarily leaving next morning",
"They go home during the afternoon or night, leaving always next morning"
),
profile = c("Pillow", "Home", "Home", "Home")
)
weekends_home_clusters_profiles <- weekends_home_clusters_profiles %>%
left_join(interp, by = "cluster")
weekends_home_clusters_profiles %>%
knitr::kable(digits = 2, col.names = c("Cluster", "Controid Start time", "Centroid Connection hours", "Interpretation", "Profile"))
sessions_profiles <- purrr::map2_dfr(
list(weekdays_city_bivarGMM$sessions, weekdays_home_bivarGMM$sessions, weekends_city_bivarGMM$sessions, weekends_home_bivarGMM$sessions),
list(weekdays_city_clusters_profiles, weekdays_home_clusters_profiles, weekends_city_clusters_profiles, weekends_home_clusters_profiles),
~ left_join(
.x,
.y %>% select(cluster, profile) %>% rename(Cluster = cluster, Profile = profile),
by = "Cluster"
)
) %>%
select(c(evprof::sessions_feature_names, "Profile"))
weekends_home_bivarGMM$models$cluster
profiles_names_weekdays <- c(weekdays_city_clusters_profiles$profile, weekdays_home_clusters_profiles$profile)
models_weekdays <- bind_rows(weekdays_city_bivarGMM$models, weekdays_home_bivarGMM$models)
plot_bivarGMM(
bind_rows(weekdays_city_bivarGMM$sessions, weekdays_home_bivarGMM$sessions),
models_weekdays,
profiles_names_weekdays
) +
labs(title = "Weekdays charging profiles", color = "Profile") +
scale_color_discrete(labels = paste0(
unique(profiles_names_weekdays),
" (",
round(models_weekdays$ratio[match(unique(profiles_names_weekdays), models_weekdays$profile)]*100),
"%)"
))
models_weekdays
weekdays_city_bivarGMM$models
devtools::load_all("C:/Users/Marc/Dropbox/PROJECTS/evprof")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
tibble(a = c(1, 2), b = c(1, 2)) %>% select(A)
tibble(a = c(1, 2), b = c(1, 2)) %>% select("a")
library(dplur)
library(dplyr
)
tibble(a = c(1, 2), b = c(1, 2)) %>% select("a")
tibble(a = c(1, 2), b = c(1, 2)) %>% select("a") %>% rename("A" = "a")
tibble(a = c(1, 2), b = c(1, 2)) %>% select("a") %>% rename("A" = "a") %>% arrange("a")
tibble(a = c(2, 1), b = c(1, 2)) %>% select("a") %>% rename("A" = "a") %>% arrange("A")
tibble(a = c(2, 1), b = c(1, 2)) %>% select("a") %>% rename("A" = "a") %>% arrange(A)
get_connection_models <- function(subsets_clustering = list(), clusters_interpretations = list()) {
subsets_n_sessions <- map_dbl(subsets_clustering, ~ nrow(.x[["sessions"]]))
subsets_ratios <- subsets_n_sessions/sum(subsets_n_sessions)
map2_dfr(
tibble(subsets_clustering, clusters_interpretations, subsets_ratios)
~ ..1[["models"]] %>%
arrange(cluster) %>%
mutate(profile = ..2[["profile"]]) %>%
select(-cluster) %>%
group_by(profile) %>%
summarise(
profile_ratio = sum(ratio)* ..3,
connection_models = list(tibble(mu = mu, sigma = sigma, ratio = ratio/sum(ratio)))
)
)
}
tibble(a = c(2, 1), b = c(1, 2)) %>% select(-"a")
#' @param n number of sessions
#' @param mu means of bivariate GMM
#' @param sigma covariance matrix of bivariate GMM
#'
#' @return numeric vector
#'
#' @importFrom stats rnorm
#'
#' @noRd
#'
estimate_energy <- function(n, mu, sigma) {
# if (n == 0) return(0)
if (n == 0) n = 1
energy_estimated <- rnorm(n, mu, sigma)
# Negative values replaced by 3 kWh
# Potential improvement to avoid negative variables: Log-Normal conversion
energy_estimated[energy_estimated <= 1] <- 3
return(energy_estimated)
}
#'
#' @param n number of sessions
#' @param energy_models energy models tibble
#'
#' @return numeric vector
#'
#' @importFrom stats rnorm
#'
#' @noRd
#'
get_estimated_energy <- function(n, energy_models) {
return(pmap(
energy_models,
~ estimate_energy(round(n*..3), ..1, ..2)
))
}
get_estimated_energy(10, 5, 1)
get_estimated_energy(10, tibble(mu = c(5, 4, 6), sigma = c(1, 1, 1), lambda = c(0.2, 0.4, 0.4))
)
library(purrr)
get_estimated_energy(10, tibble(mu = c(5, 4, 6), sigma = c(1, 1, 1), lambda = c(0.2, 0.4, 0.4))
)
#'
#' @param n number of sessions
#' @param energy_models energy models tibble
#'
#' @return numeric vector
#'
#' @importFrom stats rnorm
#'
#' @noRd
#'
get_estimated_energy <- function(n, energy_models) {
return(pmap_dbl(
energy_models,
~ estimate_energy(round(n*..3), ..1, ..2)
))
}
get_estimated_energy(10, tibble(mu = c(5, 4, 6), sigma = c(1, 1, 1), lambda = c(0.2, 0.4, 0.4)))
#'
#' @param n number of sessions
#' @param energy_models energy models tibble
#'
#' @return numeric vector
#'
#' @importFrom stats rnorm
#'
#' @noRd
#'
get_estimated_energy <- function(n, energy_models) {
return(pmap(
energy_models,
~ estimate_energy(round(n*..3), ..1, ..2)
))
}
get_estimated_energy(10, tibble(mu = c(5, 4, 6), sigma = c(1, 1, 1), lambda = c(0.2, 0.4, 0.4)))
day(dmy(01012019))
date(dmy(01012019))
readRDS("data-raw/arnhem.rds")
ev_models <- readRDS("data-raw/arnhem.rds")
devtools::load_all(".")
devtools::load_all(".")
ev_models
ev_models <- readRDS("data-raw/arnhem.rds")
ev_models$models
dates <- as_datetime(
seq.Date(from = dmy(01012019), length.out = 10, by = "day"),
tz = getOption("evprof.tzone")
) %>% floor_date("day")
library(lubridate)
dates <- as_datetime(
seq.Date(from = dmy(01012019), length.out = 10, by = "day"),
tz = getOption("evprof.tzone")
) %>% floor_date("day")
dates
charging_rates <- tibble(
rate = c(3.7, 7.3, 11, 22),
ratio = c(0.05, 0.35, 0.50, 0.10)
)
interval_mins <- 15
simulate_sessions(dates, ev_models, charging_rates, interval_mins)
ev_models <- ev_models %>% mutate(n_sessions = c(100, 150))
ev_models
unique(map_chr(ev_models$models, ~ .x$profile))
ev_models[["models"]]
unique(unlist(map(ev_models[["models"]], ~ .x[["profile"]])))
devtools::load_all(".")
simulate_sessions(dates, ev_models, charging_rates, interval_mins)
devtools::load_all(".")
simulate_sessions(dates, ev_models, charging_rates, interval_mins)
get_profile_sessions("Worktime", dates, ev_models)
dates
profile_name <- "Worktime"
map_dfr(dates, ~get_profile_day_sessions(profile_name, .x, ev_models))
ev_models
day <- dates[1]
day
month_day <- month(day)
wday_day <- wday(day, week_start = 1)
models_month_idx <- purrr::map_lgl(ev_models[["months"]], ~ month_day %in% .x)
models_wday_idx <- purrr::map_lgl(ev_models[["wdays"]], ~ wday_day %in% .x)
day_models <- ev_models[["models"]][models_month_idx*models_wday_idx]
day_models
day_models <- ev_models[["models"]][[models_month_idx*models_wday_idx]]
day_models <- ev_models[["models"]][[models_month_idx*models_wday_idx]]
day_models <- ev_models[["models"]][models_month_idx*models_wday_idx][[1]]
day_models
n_sessions <- ev_models[["n_sessions"]][models_month_idx*models_wday_idx][[1]]
n_sessions
devtools::load_all(".")
simulate_sessions(dates, ev_models, charging_rates, interval_mins)
library(tidyr)
simulate_sessions(dates, ev_models, charging_rates, interval_mins)
devtools::load_all(".")
devtools::check()
usethis::use_package("xts")
